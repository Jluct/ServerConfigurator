config: {}

Group: {
  name, id, parent, ... // тут надо обсуждать, что еще необходимо
}


//список параметров, который содержатся в файле конфигурации
ParamFile{
        pf_id
        name
        isClonable //можно ли параметр использовать несколько раз
        isUse //присвоено ли значение данному параметtrue
}

//значение параметра
ParamConf: {
      id, value
      pf_id
      pattern_id // паттерн, который использует конкретный экзепляр параметра
}

Pattern{
  id,
  name,
  pf_id, //к какому параметру относится паттерн.
         //Не думаю что паттерн можно будет нормально (безопастно) использовать в нескольких параметрах
  composition: [s_id, subtype_id_2]
  rules: [{subtype_id_1}, NOT, '-c', OR, '-d']
}

Primitive {
  id,
  name,
  rules
}

Type {
  id,
  primitive:p_id
  requiere: boolean
  composition:[const, const]
  rules:[]
}


Пусть 2 варианта команды: conf_foo
conf_foo basic -l
conf_foo advancer 172.0.0.1 -a -l /etc/lib/foo

Prop conf_foo{
id:p_id,
name:"conf_foo",
value: "-l" //допустим активировали логирование
type_id: patern_id_1
}

Patern basic{
id:patern_id_1
name:"basic"
prop_id:p_id
composition: [subtype_id_1]
}

Type operator{
id:type_id_1
name:"operator"
validation_rules:"/^(\-){1}+[a-zA-Z]{1}/" //'-l'
}

Subtype {
id:subtype_id_1
parent:type_id_1
require: false
}